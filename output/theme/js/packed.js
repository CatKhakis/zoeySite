const cardHolder=document.getElementById("cardHolder")
const card=document.getElementById("businessCard")
cardHolder.addEventListener("mousemove",(event)=>{card.classList.remove('classname');const bounds=cardHolder.getBoundingClientRect();centerX=bounds.left+(bounds.width/2);centerY=bounds.top+(bounds.height/2);mouseX=event.x;mouseY=event.y;yFactor=mouseY-centerY;xFactor=centerX-mouseX;xRotation=10;yRotation=5;card.style.transform=`
    perspective(1200px)
    rotateY(${map_range(xFactor, -(bounds.width / 2), (bounds.width / 2), -xRotation, xRotation)}deg) 
    rotateX(${map_range(yFactor, -(bounds.height / 2), (bounds.height / 2), -yRotation, yRotation)}deg)
    `;});cardHolder.addEventListener("mouseout",(event)=>{card.classList.add('classname');});function map_range(value,low1,high1,low2,high2){return low2+(high2-low2)*(value-low1)/(high1-low1);}
const root=document.querySelector(':root');const shadeSelector=document.getElementById("shadeSelector");root.classList.add("frappe");updateTone();shadeSelector.addEventListener("click",(event)=>{if(!event.target.id){clickedShade=event.target.classList[0];root.classList.remove(...root.classList);root.classList.add(clickedShade);updateTone();}else{console.log("click");}});shadeSelector.addEventListener("mouseenter",(event)=>{console.log("mouseenter");});shadeSelector.addEventListener("mouseleave",(event)=>{console.log("mouseleave");});function updateTone(){currentTone=root.classList[0];rootRules=getStylesheet("colors.css").cssRules[0].style;for(let i=0;i<rootRules.length;i++){propertyName=rootRules.item(i);rootRules.setProperty(propertyName,`var(--ctp-${currentTone}${propertyName.replace('--', '-')})`);}}
function getStylesheet(href){for(const element of document.styleSheets[0].cssRules){if(href===element.href){return element.styleSheet;}}
return null;}